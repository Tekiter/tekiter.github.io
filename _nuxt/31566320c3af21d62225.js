(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{158:function(n,t){const e={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"frontmatter-markdown"},[e("h3",[n._v("Pwntools 소개")]),n._v(" "),e("p",[n._v("Pwntools 는 리눅스 환경에서 익스플로잇을 짜는 것을 쉽게 할 수 있게 해주는 파이썬 라이브러리다.")]),n._v(" "),e("p",[n._v("공식 Github 주소 : "),e("a",{attrs:{href:"https://github.com/Gallopsled/pwntools"}},[n._v("https://github.com/Gallopsled/pwntools")])]),n._v(" "),e("p",[n._v("공식 문서 주소 : "),e("a",{attrs:{href:"http://docs.pwntools.com/en/stable/#"}},[n._v("http://docs.pwntools.com/en/stable/")])]),n._v(" "),e("h3",[n._v("Pwntools 설치")]),n._v(" "),e("p",[n._v("우분투 환경에서 다음 명령어를 입력하면 Pwntools를 쉽게 설치할 수 있다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v("sudo apt-get update\nsudo apt-get install python2.7 python-pip python-dev git libssl-dev libffi-dev build-essential\nsudo pip install --upgrade pip\nsudo pip install --upgrade pwntools\n")])]),n._v(" "),e("p",[n._v("Pwntools 는 파이썬 2.7 환경만 지원하므로 주의하자.")]),n._v(" "),e("h3",[n._v("기본중의 기본")]),n._v(" "),e("p",[n._v("Pwntools를 사용하려면 파이썬 파일의 처음에 다음과 같이 pwn 모듈을 import 시켜야 한다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v("from pwn import *\n")])]),n._v(" "),e("p",[n._v("다음과 같이 process 클래스의 인스턴스를 만드는 것으로 elf 파일을 실행시킬 수 있다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('r = process("파일이름")\n')])]),n._v(" "),e("p",[n._v("위의 줄을 실행하면 해당 프로그램을 실행시키고, 입력을 대기하게 된다.")]),n._v(" "),e("p",[n._v("이후 실행된 프로그램에는 r 변수를 통해 접근할 수 있다.")]),n._v(" "),e("p",[n._v("process() 로 실행시킨 프로그램은 입출력을 화면에 직접 할 수 없다. 대신에, r 변수를 통해 함수를 호출시키면서 파이썬 코드를 통해 프로그램의 stdin에 입력을 넣어주고, stdout에서 출력을 받아올 수 있다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('# stdin에 "Hello, World" 문자열을 넣음\nr.send("Hello, World")\n\n# stdin에 "Hello, pwntools\\n" 문자열을 넣음\nr.sendline("Hello, pwntools")\n\n\n# stdout에서 4바이트의 문자열을 읽어와 반환\nr.recv(4)\n\n# stdout에서 한 줄의 문자열을 읽어와 반환\nr.recvline()\n\n# stdout에서 "ttt"라는 문자열까지를 반환\nr.recvuntil(\'ttt\')\n\n\n# 유저가 직접 화면에 입출력 할 수 있게 한다.\nr.interactive()\n')])]),n._v(" "),e("p",[n._v("r.interactive() 함수가 특이한데, 프로그램을 평소대로 실행했던 때 처럼 입출력 할 수 있게 유저에게 입출력을 다시 돌려준다. 프로그램에 직접 입출력 조작이 필요할 때, 이 함수를 호출하면 된다.")]),n._v(" "),e("p",[n._v("예제를 통해 자세히 알아보자.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n  int i, a, b, ans;\n  srand(time(0));\n\n  for (i = 0; i < 100; i++) {\n    a = rand() % 20000;\n    b = rand() % 20000;\n    printf("#%d: %d + %d = ?\\n", i, a, b);\n    printf("> ");\n    scanf("%d", &ans);\n    if (a + b == ans) {\n      printf("Correct!\\n");\n    }\n    else {\n      printf("Wrong!\\n");\n      return 0;\n    }\n  }\n  printf("Congrats! flag{welcome_to_pwntools}");\n}\n')])]),n._v(" "),e("p",[n._v("쉬운 ctf문제로 나오는 문제 유형 중 하나이다. 100개의 덧셈 문제를 모두 풀면 플래그를 내놓는다.")]),n._v(" "),e("p",[n._v("손으로 하기엔 엄청난 노가다이지만, pwntools 을 활용해 문제를 읽어들이고 답을 입력시키면 빠르게 해결 가능하다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('from pwn import *\n\n# ./test 를 실행시킨다.\nr = process("./test")\n\n// 총 100번 반복한다.\nfor i in range(100):\n\n    # 몇번째 문제인지 표시\n    print("Solving " + str(i))\n\n    # 문제의 숫자 앞까지 읽어들이기\n    r.recvuntil(":")\n\n    # + 앞까지 읽어서 첫번째 항 숫자 읽어들이기\n    rawa = r.recvuntil("+")[:-1]\n    a = int(rawa)\n\n    # = 앞까지 읽어서 두번째 항 숫자 읽어들이기\n    rawb = r.recvuntil("=")[:-1]\n    b = int(rawb)\n\n    # 답을 구함\n    ans = a + b\n\n\t# 답을 프로그램에 입력시킴\n    r.sendline(str(ans))\n\n    # Correct! 문자열 읽어줌\n    r.recvuntil("Correct!\\n")\n\n# 다 끝나면 interactive() 로 제어를 넘겨받음\nr.interactive()\n')])]),n._v(" "),e("p",[n._v('[:-1] 은 파이썬의 문법을 활용한 것인데, "ABCDE"[:-1] 의 결과는 "ABCD" 가 된다.')]),n._v(" "),e("p",[n._v('이에 대한 자세한 내용은 "파이썬 문자열 슬라이싱" 을 검색하면 된다.')]),n._v(" "),e("p",[n._v("위의 c 코드를 gcc test.c -o test 로 컴파일하고 위의 파이썬 코드를 실행시켜 보자.")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://tekiter.github.io/images/2020-02-06-pwntools1.png",alt:"실행결과1"}}),n._v(" "),e("img",{attrs:{src:"https://tekiter.github.io/images/2020-02-06-pwntools2.png",alt:"실행결과2"}})]),n._v(" "),e("p",[n._v("플래그가 나온 것을 확인할 수 있다.")]),n._v(" "),e("p",[n._v("그런데 실제 문제는 로컬의 바이너리로 주지 않고, 원격으로 nc로 접속해야 할 때가 많다.")]),n._v(" "),e("p",[n._v("이에 따라 pwntools 에서도 원격으로 접속할 수 있는 기능을 제공한다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('r = remote("주소", 포트)\n')])]),n._v(" "),e("p",[n._v("process 대신에 remote 클래스를 사용하면 원격에 접속할 수 있다.")]),n._v(" "),e("p",[n._v("remote 를 사용해도 process 로 실행했을 때와 완전히 동일하게 send 와 recv 계열 함수를 사용할 수 있다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v("nc 123.456.789.123 12345\n")])]),n._v(" "),e("p",[n._v("로 접속하는 것은 다음과 동일하다.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('r = remote("123.456.789.123", 12345)\n')])])])}]};n.exports={attributes:{title:"Pwntools 기본 사용법",category:"보안"},meta:{resourcePath:"/home/runner/work/tekiter.github.io/tekiter.github.io/blog/posts/2020-02-06-pwntools.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(n){return this.templateRender?this.templateRender():n("div","Rendering")},created:function(){this.templateRender=e.render,this.$options.staticRenderFns=e.staticRenderFns}}}}}}]);